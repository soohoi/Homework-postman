{
	"info": {
		"_postman_id": "04044b66-f3bd-4bc3-b022-41d3c53d3839",
		"name": "homework_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20724325"
	},
	"item": [
		{
			"name": "1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/user_info_3\r",
							"// Отправить запрос.\r",
							"// Статус код 200.\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Спарсить response body в json.\r",
							"var jsonRes = pm.response.json();\r",
							"\r",
							"// Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"// Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"// Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Value name\", function () {\r",
							"    pm.expect(jsonRes.name).to.eql(\"Den4iz\");\r",
							"});\r",
							"pm.test(\"Value age\", function () {\r",
							"    pm.expect(jsonRes.age).to.eql(\"27\");\r",
							"});\r",
							"pm.test(\"Value salary\", function () {\r",
							"    pm.expect(jsonRes.salary).to.eql(1337);\r",
							"});\r",
							"\r",
							"// Спарсить request.\r",
							"var Req = pm.request.body.formdata.toObject();\r",
							"\r",
							"// Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"// Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"// Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"request Value check name\", function () {\r",
							"    pm.expect(jsonRes.name).to.eql(Req.name);\r",
							"});\r",
							"pm.test(\"request Value check age\", function () {\r",
							"    pm.expect(jsonRes.age).to.eql(Req.age);\r",
							"});\r",
							"pm.test(\"request Value check salary\", function () {\r",
							"    pm.expect(jsonRes.salary).to.eql(+Req.salary);\r",
							"});\r",
							"\r",
							"// Вывести в консоль параметр family из response.\r",
							"console.log(jsonRes.family)\r",
							"\r",
							"// Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request).\r",
							"pm.test(\"check u_salary_1_5_year\", function () {\r",
							"    pm.expect(jsonRes.family.u_salary_1_5_year).to.eql(+Req.salary*4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Den4iz",
							"type": "text"
						},
						{
							"key": "age",
							"value": "27",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1337",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "3",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/object_info_3\r",
							"// Отправить запрос.\r",
							"// Статус код 200\r",
							"pm.test(\"check Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Спарсить response body в json.\r",
							"// Спарсить request.\r",
							"var Res = pm.response.json();\r",
							"var Req = pm.request.url.query.toObject();\r",
							"\r",
							"// Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"// Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"// Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(Res.name).to.eql(Req.name);\r",
							"});\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(Res.age).to.eql(Req.age);\r",
							"});\r",
							"pm.test(\"Check salary\", function () {\r",
							"    pm.expect(Res.salary).to.eql(+Req.salary);\r",
							"});\r",
							"\r",
							"// Вывести в консоль параметр family из response.\r",
							"console.log(Res.family)\r",
							"\r",
							"// Проверить, что у параметра dog есть параметры name.\r",
							"// Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Dog have name\", function () {\r",
							"    pm.expect(Res.family.pets.dog).to.have.property(\"name\");\r",
							"});\r",
							"pm.test(\"Dog have age\", function () {\r",
							"    pm.expect(Res.family.pets.dog).to.have.property(\"age\");\r",
							"});\r",
							"\r",
							"// Проверить, что параметр name имеет значение Luky.\r",
							"// Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"Check dog name\", function () {\r",
							"    pm.expect(Res.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"pm.test(\"Check dog age\", function () {\r",
							"    pm.expect(Res.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Dimon&age=13&salary=3000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Dimon"
						},
						{
							"key": "age",
							"value": "13"
						},
						{
							"key": "salary",
							"value": "3000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/object_info_3\r",
							"// Отправить запрос.\r",
							"// Статус код 200\r",
							"pm.test(\"check Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Спарсить response body в json.\r",
							"// Спарсить request.\r",
							"var Resp = pm.response.json();\r",
							"var Requ = pm.request.url.query.toObject();\r",
							"\r",
							"// Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"// Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(Resp.name).to.eql(Requ.name);\r",
							"});\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(Resp.age).to.eql(+Requ.age);\r",
							"});\r",
							"\r",
							"// Вывести в консоль параметр salary из request.\r",
							"// Вывести в консоль параметр salary из response.\r",
							"// Вывести в консоль 0-й элемент параметра salary из response.\r",
							"// Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"// Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(Requ.salary)\r",
							"console.log(Resp.salary)\r",
							"console.log(Resp.salary[0])\r",
							"console.log(Resp.salary[1])\r",
							"console.log(Resp.salary[2])\r",
							"\r",
							"// Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"// Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"// Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"Check value salary[0]\", function () {\r",
							"    pm.expect(Resp.salary[0]).to.eql(+Requ.salary);\r",
							"});\r",
							"pm.test(\"Check value salary[1]\", function () {\r",
							"    pm.expect(+Resp.salary[1]).to.eql(Requ.salary*2);\r",
							"});\r",
							"pm.test(\"Check value salary[2]\", function () {\r",
							"    pm.expect(+Resp.salary[2]).to.eql(Requ.salary*3);\r",
							"});\r",
							"\r",
							"// Создать в окружении переменную name\r",
							"// Создать в окружении переменную age\r",
							"// Создать в окружении переменную salary\r",
							"// Передать в окружение переменную name\r",
							"// Передать в окружение переменную age\r",
							"// Передать в окружение переменную salary\r",
							"// Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							"for(x = 0; x < 3; x++){\r",
							"    var i = Resp.salary[x]\r",
							"    console.log(i)}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Sergay&age=39&salary=1211",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Sergay"
						},
						{
							"key": "age",
							"value": "39"
						},
						{
							"key": "salary",
							"value": "1211"
						}
					]
				}
			},
			"response": []
		}
	]
}